// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateGroupForm component  should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateGroupForm
    handleChange={[Function]}
    handleSubmit={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="col s12 m4 offset-m1 component-container"
      >
        <div
          className=""
        >
          <h3
            className="center big-text"
          >
             Create Group 
          </h3>
          <form
            onSubmit={[Function]}
          >
            <p
              className="red-text center"
            >
                 
               
            </p>
            <div
              className="input-field"
            >
              <input
                id="groupName"
                name="groupName"
                onChange={[Function]}
                required={true}
                type="text"
              />
              <label
                htmlFor="groupName"
              >
                Group Name
              </label>
            </div>
            <div
              className="input-field"
            >
              <input
                id="groupDescription"
                name="groupDescription"
                onChange={[Function]}
                required={true}
                type="text"
              />
              <label
                htmlFor="password"
              >
                Group Description
              </label>
            </div>
            <SubmitButton
              submitValue="Create Group"
            />
          </form>
          <p>
               
          </p>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className=""
        >
          <h3
            className="center big-text"
          >
             Create Group 
          </h3>
          <form
            onSubmit={[Function]}
          >
            <p
              className="red-text center"
            >
                 
               
            </p>
            <div
              className="input-field"
            >
              <input
                id="groupName"
                name="groupName"
                onChange={[Function]}
                required={true}
                type="text"
              />
              <label
                htmlFor="groupName"
              >
                Group Name
              </label>
            </div>
            <div
              className="input-field"
            >
              <input
                id="groupDescription"
                name="groupDescription"
                onChange={[Function]}
                required={true}
                type="text"
              />
              <label
                htmlFor="password"
              >
                Group Description
              </label>
            </div>
            <SubmitButton
              submitValue="Create Group"
            />
          </form>
          <p>
               
          </p>
        </div>,
        "className": "col s12 m4 offset-m1 component-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="center big-text"
            >
               Create Group 
            </h3>,
            <form
              onSubmit={[Function]}
            >
              <p
                className="red-text center"
              >
                   
                 
              </p>
              <div
                className="input-field"
              >
                <input
                  id="groupName"
                  name="groupName"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="groupName"
                >
                  Group Name
                </label>
              </div>
              <div
                className="input-field"
              >
                <input
                  id="groupDescription"
                  name="groupDescription"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="password"
                >
                  Group Description
                </label>
              </div>
              <SubmitButton
                submitValue="Create Group"
              />
            </form>,
            <p>
                 
            </p>,
          ],
          "className": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Create Group ",
              "className": "center big-text",
            },
            "ref": null,
            "rendered": " Create Group ",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="red-text center"
                >
                     
                   
                </p>,
                <div
                  className="input-field"
                >
                  <input
                    id="groupName"
                    name="groupName"
                    onChange={[Function]}
                    required={true}
                    type="text"
                  />
                  <label
                    htmlFor="groupName"
                  >
                    Group Name
                  </label>
                </div>,
                <div
                  className="input-field"
                >
                  <input
                    id="groupDescription"
                    name="groupDescription"
                    onChange={[Function]}
                    required={true}
                    type="text"
                  />
                  <label
                    htmlFor="password"
                  >
                    Group Description
                  </label>
                </div>,
                <SubmitButton
                  submitValue="Create Group"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "   ",
                    undefined,
                    " ",
                  ],
                  "className": "red-text center",
                },
                "ref": null,
                "rendered": Array [
                  "   ",
                  undefined,
                  " ",
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      id="groupName"
                      name="groupName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                    />,
                    <label
                      htmlFor="groupName"
                    >
                      Group Name
                    </label>,
                  ],
                  "className": "input-field",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "groupName",
                      "name": "groupName",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Group Name",
                      "htmlFor": "groupName",
                    },
                    "ref": null,
                    "rendered": "Group Name",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      id="groupDescription"
                      name="groupDescription"
                      onChange={[Function]}
                      required={true}
                      type="text"
                    />,
                    <label
                      htmlFor="password"
                    >
                      Group Description
                    </label>,
                  ],
                  "className": "input-field",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "groupDescription",
                      "name": "groupDescription",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Group Description",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Group Description",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "submitValue": "Create Group",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "   ",
            },
            "ref": null,
            "rendered": "   ",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col s12 m4 offset-m1 component-container"
        >
          <div
            className=""
          >
            <h3
              className="center big-text"
            >
               Create Group 
            </h3>
            <form
              onSubmit={[Function]}
            >
              <p
                className="red-text center"
              >
                   
                 
              </p>
              <div
                className="input-field"
              >
                <input
                  id="groupName"
                  name="groupName"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="groupName"
                >
                  Group Name
                </label>
              </div>
              <div
                className="input-field"
              >
                <input
                  id="groupDescription"
                  name="groupDescription"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="password"
                >
                  Group Description
                </label>
              </div>
              <SubmitButton
                submitValue="Create Group"
              />
            </form>
            <p>
                 
            </p>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className=""
          >
            <h3
              className="center big-text"
            >
               Create Group 
            </h3>
            <form
              onSubmit={[Function]}
            >
              <p
                className="red-text center"
              >
                   
                 
              </p>
              <div
                className="input-field"
              >
                <input
                  id="groupName"
                  name="groupName"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="groupName"
                >
                  Group Name
                </label>
              </div>
              <div
                className="input-field"
              >
                <input
                  id="groupDescription"
                  name="groupDescription"
                  onChange={[Function]}
                  required={true}
                  type="text"
                />
                <label
                  htmlFor="password"
                >
                  Group Description
                </label>
              </div>
              <SubmitButton
                submitValue="Create Group"
              />
            </form>
            <p>
                 
            </p>
          </div>,
          "className": "col s12 m4 offset-m1 component-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="center big-text"
              >
                 Create Group 
              </h3>,
              <form
                onSubmit={[Function]}
              >
                <p
                  className="red-text center"
                >
                     
                   
                </p>
                <div
                  className="input-field"
                >
                  <input
                    id="groupName"
                    name="groupName"
                    onChange={[Function]}
                    required={true}
                    type="text"
                  />
                  <label
                    htmlFor="groupName"
                  >
                    Group Name
                  </label>
                </div>
                <div
                  className="input-field"
                >
                  <input
                    id="groupDescription"
                    name="groupDescription"
                    onChange={[Function]}
                    required={true}
                    type="text"
                  />
                  <label
                    htmlFor="password"
                  >
                    Group Description
                  </label>
                </div>
                <SubmitButton
                  submitValue="Create Group"
                />
              </form>,
              <p>
                   
              </p>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Create Group ",
                "className": "center big-text",
              },
              "ref": null,
              "rendered": " Create Group ",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="red-text center"
                  >
                       
                     
                  </p>,
                  <div
                    className="input-field"
                  >
                    <input
                      id="groupName"
                      name="groupName"
                      onChange={[Function]}
                      required={true}
                      type="text"
                    />
                    <label
                      htmlFor="groupName"
                    >
                      Group Name
                    </label>
                  </div>,
                  <div
                    className="input-field"
                  >
                    <input
                      id="groupDescription"
                      name="groupDescription"
                      onChange={[Function]}
                      required={true}
                      type="text"
                    />
                    <label
                      htmlFor="password"
                    >
                      Group Description
                    </label>
                  </div>,
                  <SubmitButton
                    submitValue="Create Group"
                  />,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "   ",
                      undefined,
                      " ",
                    ],
                    "className": "red-text center",
                  },
                  "ref": null,
                  "rendered": Array [
                    "   ",
                    undefined,
                    " ",
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        id="groupName"
                        name="groupName"
                        onChange={[Function]}
                        required={true}
                        type="text"
                      />,
                      <label
                        htmlFor="groupName"
                      >
                        Group Name
                      </label>,
                    ],
                    "className": "input-field",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "groupName",
                        "name": "groupName",
                        "onChange": [Function],
                        "required": true,
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Group Name",
                        "htmlFor": "groupName",
                      },
                      "ref": null,
                      "rendered": "Group Name",
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        id="groupDescription"
                        name="groupDescription"
                        onChange={[Function]}
                        required={true}
                        type="text"
                      />,
                      <label
                        htmlFor="password"
                      >
                        Group Description
                      </label>,
                    ],
                    "className": "input-field",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "groupDescription",
                        "name": "groupDescription",
                        "onChange": [Function],
                        "required": true,
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Group Description",
                        "htmlFor": "password",
                      },
                      "ref": null,
                      "rendered": "Group Description",
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "submitValue": "Create Group",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "form",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "   ",
              },
              "ref": null,
              "rendered": "   ",
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
